<Page
    x:Class="WordPressUWP.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding ShellViewModel, Source={StaticResource Locator}}"
    xmlns:vm="using:WordPressUWP.ViewModels"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d" Loaded="Page_Loaded">
    <Page.Resources>
        <DataTemplate x:Key="NavigationMenuItemDataTemplate" x:DataType="vm:ShellNavigationItem">
            <Grid Width="320" Height="40" Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle
                        Width="6"
                        Height="24"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                        Visibility="{x:Bind SelectedVis, Mode=OneWay}" />
                <Viewbox
                        Child="{x:Bind Icon}"
                        ToolTipService.ToolTip="{x:Bind Label}"
                        Margin="16,12"
                        VerticalAlignment="Center" />
                <TextBlock
                        Grid.Column="1"
                        Margin="0,9,0,11"
                        VerticalAlignment="Center"
                        Foreground="{x:Bind SelectedForeground, Mode=OneWay}"
                        Text="{x:Bind Label}"
                        Style="{StaticResource BodyTextBlockStyle}"
                        TextTrimming="None" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerDownThemeAnimation TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ContentBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <controls:HamburgerMenu
            x:Name="NavigationMenu"
            DisplayMode="{x:Bind ViewModel.DisplayMode, Mode=OneWay}"
            IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
            ItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            ItemsSource="{x:Bind ViewModel.PrimaryItems}"
            OptionsItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            OptionsItemsSource="{x:Bind ViewModel.SecondaryItems}"
            PaneBackground="{ThemeResource SystemControlBackgroundAltHighBrush}"
            PaneForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
            >
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="ItemClick">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="OptionsItemClick">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <Grid Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
                <Frame x:Name="shellFrame"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="WindowStates">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="CurrentStateChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.StateChangedCommand}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <VisualState x:Name="PanoramicState">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="1024"/>
                        </VisualState.StateTriggers>
                    </VisualState>
                    <VisualState x:Name="WideState">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="640"/>
                        </VisualState.StateTriggers>
                    </VisualState>
                    <VisualState x:Name="NarrowState">
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="0"/>
                        </VisualState.StateTriggers>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </controls:HamburgerMenu>
        <Popup x:Name="LoginPopup"
               IsOpen="{x:Bind ViewModel.IsLoginPopupOpen, Mode=TwoWay}"
               IsLightDismissEnabled="True"
               VerticalAlignment="Stretch"
               HorizontalAlignment="Stretch">
            <Grid Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="12">
                    <TextBox x:Name="UsernameTbx" Header="Username" PlaceholderText="Username" HorizontalAlignment="Stretch" Margin="0 0 0 12"></TextBox>
                    <PasswordBox x:Name="PasswordTbx" Header="Password" PlaceholderText="Password" HorizontalAlignment="Stretch" Margin="0 0 0 12"></PasswordBox>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="LoginBtn" Content="[Login]" Margin="0 0 12 0" Click="LoginBtn_Click"></Button>
                        <Button x:Name="CancelBtn" Content="[Cancel]" Click="{x:Bind ViewModel.CloseLoginPopup}"></Button>
                    </StackPanel>
                    <TextBlock x:Name="LoginErrorMessage" Visibility="{x:Bind ViewModel.ShowLoginError, Mode=OneWay}" Text="[Error loggin in]"></TextBlock>
                </StackPanel>
            </Grid>
        </Popup>
        <controls:InAppNotification x:Name="GlobalInAppNotification" Content="Testnotification" />
    </Grid>
</Page>
